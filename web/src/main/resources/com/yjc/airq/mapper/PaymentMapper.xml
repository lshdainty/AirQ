<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjc.airq.mapper.PaymentMapper">
	<!-- 상품 결제정보 등록 -->
	<insert id="pInsertPayment" parameterType="com.yjc.airq.domain.PaymentVO">
		insert into payment(payment_code,payment_price,demand_code,payment_date) values(#{payment_code},#{payment_price},#{demand_code},systimestamp)
	</insert>
	
	<!-- 상품 결제정보 삭제하기 -->
	<delete id="productPaymentDelete" parameterType="String">
		delete 
		from payment 
		where demand_code in(
								select d.demand_code
								from product p, demand d, payment p
								where p.product_code = d.product_code
								and d.demand_code = p.demand_code
								and d.product_code = #{product_code})
	</delete>
	
	<select id="mypay" resultType="com.yjc.airq.domain.PaymentVO">
		select  p.payment_code,p.payment_price,t.tender_title,p.star_score , to_char(d.demand_date,'yyyy-mm-dd') as day, c.company_name, c.MEMBER_ID as company_id,pr.PRODUCT_NAME
		from payment p, demand d, member m, product pr, company_info c, tender t
		where m.member_id = d.member_id
        and t.tender_code(+) = p.tender_code
		and d.demand_code = p.demand_code
		and d.product_code = pr.product_code
		and pr.company_code = c.company_code
		and m.member_id = #{member_id}
		and p.REFUND_WHETHER ='n'
		GROUP by p.payment_code,p.payment_price,t.tender_title,p.STAR_SCORE, to_char(d.demand_date,'yyyy-mm-dd'), c.company_name, c.MEMBER_ID,pr.PRODUCT_NAME
		order by to_char(d.demand_date,'yyyy-mm-dd') desc
	</select>
	
	<select id="mypayNotNull" resultType="com.yjc.airq.domain.PaymentVO">
		select  p.payment_code,p.payment_price,t.tender_title,p.star_score , to_char(d.demand_date,'yyyy-mm-dd') as day, c.company_name, c.MEMBER_ID as company_id,pr.PRODUCT_NAME
		from payment p, demand d, member m, product pr, company_info c, tender t
		where m.member_id = d.member_id
        and t.tender_code(+) = p.tender_code
		and d.demand_code = p.demand_code
		and d.product_code = pr.product_code
		and pr.company_code = c.company_code
		and m.member_id = #{member_id}
		and not p.star_score is null
		and p.REFUND_WHETHER ='n'
		GROUP by p.payment_code,p.payment_price,t.tender_title,p.STAR_SCORE, to_char(d.demand_date,'yyyy-mm-dd'), c.company_name, c.MEMBER_ID,pr.PRODUCT_NAME
		order by to_char(d.demand_date,'yyyy-mm-dd') desc
	</select>
	
	<select id="mypayNull" resultType="com.yjc.airq.domain.PaymentVO">
		select  p.payment_code,p.payment_price,t.tender_title,p.star_score , to_char(d.demand_date,'yyyy-mm-dd') as day, c.company_name, c.MEMBER_ID as company_id,pr.PRODUCT_NAME
		from payment p, demand d, member m, product pr, company_info c, tender t
		where m.member_id = d.member_id
        and t.tender_code(+) = p.tender_code
		and d.demand_code = p.demand_code
		and d.product_code = pr.product_code
		and pr.company_code = c.company_code
		and m.member_id = #{member_id}
		and p.star_score is null
		and p.REFUND_WHETHER ='n'
		GROUP by p.payment_code,p.payment_price,t.tender_title,p.STAR_SCORE, to_char(d.demand_date,'yyyy-mm-dd'), c.company_name, c.MEMBER_ID,pr.PRODUCT_NAME
		order by to_char(d.demand_date,'yyyy-mm-dd') desc
	</select>
	
	<select id="mypayT" resultType="com.yjc.airq.domain.PaymentVO">
	    select  p.tender_code,p.payment_code,p.payment_price,t.tender_title as product_name,p.star_score,t.member_id as company_id, to_char(t_creation_date,'yyyy-mm-dd') as day
        from payment p,  member m, tender t
		where m.member_id = t.member_id
        and t.tender_code = p.tender_code
		and m.member_id = #{member_id}
		and p.REFUND_WHETHER ='n'
		GROUP by  p.tender_code,p.payment_code,p.payment_price,t.tender_title,p.star_score, to_char(t_creation_date,'yyyy-mm-dd'),t.member_id
		order by to_char(t_creation_date,'yyyy-mm-dd') desc
	</select>
	
	<select id="mypayNotNullT" resultType="com.yjc.airq.domain.PaymentVO">
	    select  p.tender_code,p.payment_code,p.payment_price,t.tender_title as product_name,p.star_score,t.member_id as company_id, to_char(t_creation_date,'yyyy-mm-dd') as day
        from payment p,  member m, tender t
		where m.member_id = t.member_id
        and t.tender_code = p.tender_code
		and m.member_id = #{member_id}
		and p.REFUND_WHETHER ='n'
		and not p.star_score is null
		GROUP by  p.tender_code,p.payment_code,p.payment_price,t.tender_title,p.star_score, to_char(t_creation_date,'yyyy-mm-dd'),t.member_id
		order by to_char(t_creation_date,'yyyy-mm-dd') desc	
	</select>
	
	<select id="mypayNullT" resultType="com.yjc.airq.domain.PaymentVO">
	    select  p.tender_code,p.payment_code,p.payment_price,t.tender_title as product_name,p.star_score,t.member_id as company_id, to_char(t_creation_date,'yyyy-mm-dd') as day
        from payment p,  member m, tender t
		where m.member_id = t.member_id
        and t.tender_code = p.tender_code
		and m.member_id = #{member_id}
		and p.REFUND_WHETHER ='n'
		and p.star_score is null
		GROUP by  p.tender_code,p.payment_code,p.payment_price,t.tender_title,p.star_score, to_char(t_creation_date,'yyyy-mm-dd'),t.member_id
		order by to_char(t_creation_date,'yyyy-mm-dd') desc
	</select>
	
	<update id="mypayStarUp" parameterType="com.yjc.airq.domain.PaymentVO">
		UPDATE payment set star_score = #{star_score}
		where payment_code = #{payment_code}
	</update>
	
	<!-- 입찰 신청 결제 -->
	<insert id="tendering">
		insert into payment(payment_code,payment_price,tender_code,payment_date) values(#{payment_code},${payment_price},#{tender_code},systimestamp)
	</insert>
	
	<!-- mypageNormal - 최신 결제 내역 -->
	<select id="normalNewPayment" resultType="map">
		select rownum, o.*, case when o.code like 'td%' then '입/투찰 서비스'
                        		 when o.code like 'pd%' then '업체연결 서비스'
                       		     end as devision
		from (select t.tender_code as code, t.tender_title as title, b.bid_price as price, to_char(p.payment_date,'yyyy-MM-dd hh24:mi') as p_date, p.payment_code
     		  from tender t, bid b, payment p
      		  where t.tender_code=b.tender_code and b.win_bid_whether='y' and member_id=#{member_id} and t.tender_code=p.tender_code
      		  union all
      		  select p.product_code as code, p.product_name as title, p.product_price as price, to_char(p.payment_date,'yyyy-MM-dd hh24:mi') as p_date, p.payment_code
      		  from product p,demand d, payment p
      		  where p.product_code=d.product_code and d.member_id=#{member_id} and d.demand_code=p.demand_code
      		  order by p_date desc) o
		where <![CDATA[rownum <= 5]]>
	</select>
	
	<!-- 입찰에 대한 별점 update -->
	<update id="starScoreupdate">
		update payment
		set star_score=${star_score}
		where payment_code=#{payment_code}
	</update>
	
	<!-- 판매자 월별 매출 차트 - 상품서비스 -->
	<select id="productSales" resultType="map">
		select sum(p.payment_price),to_char(p.payment_date,'yy-mm')
		from payment p, demand d, product t
		where p.demand_code is not null and p.demand_code=d.demand_code and d.product_code = t.product_code 
    		and t.company_code = (select company_code from company_info where company_code=#{company_code})
		group by to_char(p.payment_date,'yy-mm')
	</select>
</mapper>